---
title: "Reformulação do Mapa das Organizações da Sociedade Civil (IPEA)"
output: 
  rmarkdown::github_document
    
---
  **Murilo Junqueira**  (m.junqueira@yahoo.com.br)  


### Objetivo do Projeto:

Demonstrar um modelo de reformulação dos dados atualmente disponíveis no [Mapa das Organizações da Sociedade Civil (OSC)](https://mapaosc.ipea.gov.br/).

### Os passos dessa reformulação são:

1. Mapeamento das Bases Originais que compõem o Mapa
2. Criação de um novo *schema* dos dados, representado por um diagrama entidade-relacionamento (DER)
3. Validação do *schema* junto à direção do IPEA.
4. Formatação dos dados originais no novo *schema*.
5. Migração dos dados para, para um DBMS (*Data Base Management System*), PostgreSQL ou MySQL.
6. Criação da documentação completa do banco, incluindo o fluxo administrativo.

Essa página visa descrever como se dá os passos 2 e 4, utilizando as bases atualmente disponíveis no site [Site do Mapa das (OSC)](https://mapaosc.ipea.gov.br/base-dados).

Os demais passos não são possíveis de serem feitos no momento.


### Definição de um novo *schema* para o Mapa das OSC


Com base nos dados disponíveis no [Mapa das (OSC)](https://mapaosc.ipea.gov.br/base-dados), na aba "Dados > Base de dados", elaboramos o seguinte modelo de dados:

#### Diagrama Entidade-Relacionamento (DER):

![Entity-relationship diagram](data/metadata/dataModel_MySQL/BD_MapaOSC.png)

A figura do *schema* acima, em tamanho expandido, pode ser encontrada na pasta "data/metadata/dataModel_MySQL/" deste repositório. 

A criação deste modelo de dados foi feita com o princípio de reduzir ao máximo a redundância dos dados (processo de "normalização" das bases de dados), de modo a que cada informação apareça apenas uma vez. Abaixo explicamos o significado de cada uma das tabelas e das conexões feitas.


#### Explicação do Diagrama Entidade-Relacionamento:

A tabela mais central do banco é a tabela **OSC**, que guarda os dados básicos das Organizações da Sociedade Civil. Suas variáveis são:

* Tabela **OSC:**
  * **id_osc:** (chave-primária) identificação da OSC.
  * **Munic_Id:** código IBGE do município da sede da OSC.
  * **cd_identificador_osc:** outro número de indentificação das OSC.
  * **tx_razao_social_osc:** razão social da OSC.
  * **tx_nome_fantasia_osc:** nome fantasia da OSC.
  * **dt_fundacao_osc:** data de fundação da OSC.
  * **cd_natureza_juridica_osc:** natureza jurídica da OSC.
  * **cnae_divisao_corrigido:** divisão da CNAE que se encontra a OSC.
  * **cnae_grupo_corrigido:** grupo da CNAE.
  * **cnae_classe_corrigido:** classe da CNAE.
  * **cnae_subclase_corrigido:** sub-classe da CNAE.
  * **endereco:** endereço oficial da OSC.
  * **bairro:** bairro.
  * **macro_area_atuacao:** macro área de atuação da OSC.
  * **micro_area_atuacao:** micro área de atuação da OSC.


Na região noroeste do DER acima estão algumas tabelas destinadas a guardas dados sobre as regiões administrativas brasileiras, ou seja, os entes federativos. Optamos por criar uma tabela genérica "Governos" para agregar todos os níveis federativos, dos municípios ao governo federal. Isso é necessário porque em algumas tabelas a OSC pode ter atributos de qualquer nível federativo. Por exemplo, ela pode ter um certificado municipal (ex: Conselho Municipal de Assistência Social), mas também pode ter um certificado estadual (ex: do Conselho Estadual de Assistência Social ou de Saúde) e também do governo federal (ex: Ministério da Justiça). O mesmo ocorre quanto a entidade tem assento em conselhos de políticas públicas: ela pode ter acento em conselhos de qualquer nível federativo. Então, criar colunas próprias para cada um dos níveis federativos não é conveniente. Com a tabela intermediária "Governos", podemos criar a relação apenas com essa tabela. Para manter a consistência e conexão nos dados, criamos duas relações "de um para um" (1:1) entre as tabelas "Governos" e "Municipios", bem como entre as tabelas "Governos" e "UFs". Em termos lógicos, podemos ler o seguinte: alguns governos são municípios, mas não todos; da mesma forma, alguns governos são Estados, mas não todos. Existe, inclusive o caso de dois governos que não são nem Estados nem Municípios: o governo federal e o Distrito Federal. 

* Tabela **UFs:**
  * **Governo_Id:**  (chave-primária) Identificação das unidades federativas.
  * **UF_Sigla:** sigla das UFs (ex: GO, ES).
  * **UF_CodIBGE:** código IBGE das UFs.
  * **UF_Nome:** nome da UF.
  * **UF_Regiao:** sigla da região da UF (ex: N, NE, CE, SE, S).
  <br><br>
  
* Tabela **Municipios:**
  * **Governo_Id:** (chave-primária) identificação dos municípios.
  * **Munic_COdIBGE:** código IBGE dos municípios.
  * **UF_Sigla:** (chave-estrangeira) sigla do Estado do município.
  * **Munic_Nome:** nome do município.
<br><br>

* Tabela **Governos:**
  * **Governo_Id:** (chave-primária) identificação dos governos.
  * **Governo_Tipo:** o tipo de governo (município, estado, DF ou União)
<br><br>

Na região sudoeste do mapa existe uma série de tabelas de caracterização das OSC. A primeira são os certificados que a organização possui. Como mencionado acima, cada certificado foi dado por um governo (que pode ser a União, Estado ou Município). A tabela *Certificados* fala sobre as características intrínsecas de cada certificado, mas não fala qual OSC possui cada certificado. Isso é feito na tabela *OSC_Certificados*, que estabelece uma relação "de muitos para muitos" (m:n) entre *OSC* e *Certificados*. Os certificados possuem validade, que está guardado nas variáveis *dt_inicio_certificado* e *dt_fim_certificado*.
  
* Tabela **Certificados:**
  * **Certificado_Id:** (chave-primária) indentificação do certificado.
  * **tx_nome_certificado:** nome do certificado.
  * **ft_certificado:** órgão que atribui o certificado.
<br><br>

* Tabela **OSC_Certificados:**
  * **id_osc:** (chave-primária, chave-extrangeira) identificação da OSC.
  * **Certificado_Id:** (chave-primária) indentificação do certificado.
  * **Governo_Id:** (chave-estrangeira) governo que atribuiu o certificado.
  * **dt_inicio_certificado:** (chave-primária) data de início do certificado.
  * **dt_fim_certificado:** data de fim do certificado
<br><br>

Ainda na região sudoeste do DER, existem informações sobre as áreas e subáreas de atuação das OSC. A relação lógica estipulada no modelo de dados é que cada subárea possui uma única área correspondente. As OSC podem ter qualquer número de área ou subáreas em uma relação "de muitos para muitos" (m:n).

* Tabela **AreasAtuacao:**
  * **Area_Id:** (chave-primária) identificação da área de atuação.
  * **Area_Nome:** Nome da área de atuação.
<br><br>

* Tabela **AreasAtuacao_OSC:**
  * **Area_Id:** (chave-primária, chave-extrangeira) identificação da subárea de atuação.
  * **id_osc:** (chave-primária, chave-extrangeira) identificação da OSC.
<br><br>

* Tabela **SubAreasAtuacao:**
  * **SubArea_Id:** (chave-primária) identificação da subárea de atuação.
  * **SubArea_Nome:** nome da subárea.
  * **Area_Id:** (chave-estrangeira) nome da área de atuação.
<br><br>

* Tabela **SubAreasAtuacao_OSC:**
  * **SubArea_Id:** (chave-primária, chave-extrangeira) identificação da subárea de atuação.
  * **id_osc:** (chave-primária, chave-extrangeira) identificação da OSC.
<br><br>

Na região nordeste do DER temos algumas informações sobre a atuação das OSC, como participação em conselhos e conferências (no [Mapa das (OSC)](https://mapaosc.ipea.gov.br/base-dados) essas duas informações estavam juntas, mas o mais correto seria separar elas em tabelas distintas), projetos desenvolvidos e arrecadação de recursos. As tabelas *OSC_Conferencias* e *OSC_Conselhos* fazem a correspondências entre cada OSC e as conferências e os conselhos, respectivamente.

* Tabela **Conferencias:**
  * **Conferencia_Id:** (chave-primária) identificação da conferência.
  * **Conferencia_Nome:** nome da conferência.
  * **Conferencia_DtInicio:** data de início da conferência.
  * **Conferencia_DtFim:** data de fim da conferência.
<br><br>

* Tabela **OSC_Conferencias:**
  * **id_osc:** (chave-primária, chave-estrangeira) identificação da OSC.
  * **Conferencia_Id:** (chave-primária, chave-estrangeira) identificação da conferência.
  * **OSCConf_TipoParticipacao:** tipo de participação que a OSC teve na conferência.
<br><br>

* Tabela **Conselhos:**
  * **Conselho_Id:** (chave-primária) identificação do conselho.
  * **tx_nome_conselho:** nome do conselho.
  * **tx_nome_orgao_vinculado:** nome do órgão governamental no qual o conselho é vinculado.
  * **tx_nome_periodicidade_reuniao_conselho:** periodicidade da reunião do conselho.
<br><br>

* Tabela **OSC_Conselhos:**
  * **id_osc:** (chave-primária, chave-estrangeira) identificação da OSC.
  * **Conselho_Id:** (chave-primária, chave-estrangeira)  identificação do conselho.
  * **dt_data_inicio_conselho:** data de início da participação da OSC no conselho.
  * **dt_data_fim_conselho:** data de fim da participação da OSC no conselho.
<br><br>

A longa tabela dos "projeto" indica que muitas variáveis que estão nesta única tabela possuem relações de "um para muitos" (1:m) ou "muitos para muitos" (m:n). Certemente após uma análise mais detida das características dos dados ela seria quebrada em várias tabelas.

* Tabela **Projetos:**
  * **id_projeto:** (chave-primária) identificação dos projetos.
  * **id_osc:** (chave-estrangeira) identificação da OSC.
  * **tx_nome_projeto:** nome do projeto.
  * **dt_data_inicio_projeto:** data de início do projeto.
  * **dt_data_fim_projeto:** data de fim do projeto.
  * **tx_link_projeto:** link para a página do convênio no portal 'https://www.convenios.gov.br'.
  * **nr_total_beneficiarios:** número total de beneficiários do convêncio.
  * **nr_valor_captado_projeto:** valor captado para o projeto.
  * **nr_valor_total_projeto:** valor total do projeto.
  * **tx_nome_abrangencia_projeto:** abrangência do projeto.
  * **tx_nome_zona_atuacao:** nome da zona de atuação do projeto.
  * **tx_descricao_projeto:** descrição do projeto.
  * **tx_metodologia_monitoramento:** metodologia de monitoramento do projeto.
  * **ft_identificador_projeto_externo:** identificador do projeto no órgão externo.
  * **tx_status_projeto_outro:** status do projeto.
  * **tx_nome_financiador:** nome do financiador do projeto.
  * **tx_orgao_concedente:** nome do órgão concedente do projeto.
  * **tx_nome_origem_fonte_recursos_projeto:** nome da origem dos recursos do projeto.
  * **tx_nome_fonte_recursos_projeto:** nome da fonte dos recursos do projeto.
  * **tx_nome_regiao_localizacao_projeto:** região de localização do projeto.
  * **tx_nome_objetivo_projeto:** objetivo do projeto.
  * **tx_nome_meta_projeto:** meta do projeto.
  * **tx_nome_publico_beneficiado:** nome dos beneficiados do projeto.
  * **nr_estimativa_pessoas_atendidas:** estimativa de pessoas atendidas pelo projeto.
  * **tx_nome_tipo_parceria:** nome do tipo de parceria estabelecida para o projeto.
<br><br>

* Tabela **Recursos:**
  * **Recurso_Id:** (chave-primária) identificação dos recursos.
  * **id_osc:** (chave-estrangeira) identificação da OSC.
  * **tx_nome_fonte_recursos_osc:** nome da fonte dos recursos.
  * **dt_ano_recursos_osc:** ano em que os recursos foram arrecadados.
  * **nr_valor_recursos_osc:** valor dos recursos.
  * **ft_fonte_recursos_osc:** nome do órgão que concedeu os recursos.
<br><br>  

Por fim, na região sudeste do DER, existe algumas tabelas sobre as "pessoas". Elas são informações sobre a diretoria e os diretores da OSC e também sobre o número de pessoas empregadas, segundo a RAIS (Relação Anual de Informações Sociais), vinculada ao Ministério do Trabalho.

* Tabela **Diretoria:**
  * **Diretoria_Id:** (chave-primária) identificação da diretoria.
  * **id_osc:** (chave-estrangeira) identificação da OSC. 
  * **ano:** Ano do relatório de prestação de contas.
  * **nm_diretor:** nome do diretor .
  * **nm_cargo:** Cargo do diretor.
  * **in_empregado_publico:** Indicador de que o diretor é funcionário público.
<br><br>

* Tabela **Diretores:**
  * **Diretor_Id:** (chave-primária) identidicação dos diretores.
  * **id_osc:** (chave-estrangeira) identificação da OSC.
  * **url_principal:** URL do relatório circunstanciado.
  * **tp_sede:** Tipo de sede da entidade (Alugada; Cedida; Comodato; Outros;Propria).
  * **nm_cartorio:** Nome do cartório do registro legal da entidade.
  * **dt_reg:** Data do registro da entidade.
  * **in_mudanca_previa:** Indicador de mudança na diretoria no exercício anterior.
  * **dt_inicio_mandato_atual:** Data de início do mandato atual.
  * **dt_fim_mandato_atual:** Data de término do mandato atual.
  * **nm_diretor:** Nome do diretor.
  * **nm_ocupacao:** Nome do cargo do diretor.
  * **nm_genero:** Nome do gênero do diretor.
  * **in_empregado_publico:** Indicador de que o diretor é funcionário público.
  * **in_funcao_remunerada:** Indicador de que o diretor exerce função remunerada na entidade.
  * **nm_funcao_remunerada:** Nome da função remunerada exercida na entidade.
<br><br>

* Tabela **VinculosEmpregaticiosAno:**
  * **id_osc:** (chave-primária, chave-extrangeira) identificação da OSC.
  * **Ano:** (chave-primária) 
  * **n_vinc_ativos:** 
  * **n_vinc_defic:** 
  

### Formatação dos dados originais no novo *schema*

Finalizado a definição do modelo de dados, vamos pegar as [bases originais](https://mapaosc.ipea.gov.br/base-dados) e colocar no novo formato usando o R. Abaixo está um pequeno exemplo de como isso seria feito. Fizemos a formatação dos dados das OSC, dos Governos (as bases das UFs e dos Município já estavam previamente inseridas nos nossos dados, através de dados baixados do IBGE), das áreas e subáreas de atuação das OSC. A nossa proposta é continuar esse trabalho com todos os dados do Mapa das OSC.

o script R descrito abaixo é o arquivo ['src/FormataBD.R'](src/FormataBD.R) deste repositório.

Primeiramente, vamos carregar alguns pacotes básicos de sobrevivência:

```{r eval = FALSE}
# Main packages
library(tidyverse)
library(data.table)
library(stringr)
library(assertthat)


# Options
options(stringsAsFactors = FALSE)
options(encoding = "utf-8")
options(dplyr.summarise.inform = FALSE)
```

Agora iremos criar a tabela **Governos**. Faremos isso empilhando as chaves primárias dos municípios e dos Estados e atribuindo corretamente a variável *Governo_Tipo*:

```{r eval = FALSE}
# Formata Tabela 'Governos' ####

# Carrega Dados prévios sobre os estados:
Ufs <- fread("data/dataset/UFs.csv", encoding = "Latin-1")

# Carrega dados prévios sobre os municípios:
Municipios <- fread("data/dataset/Municipios.csv", encoding = "Latin-1")

# Empilha chaves-primárias de estados e municípios, adiciona a variável Governo_Tipo
Governos_Id <- Ufs %>% 
  rename(Governo_Id = UF_Id) %>% 
  bind_rows(select(
    rename(
      Municipios, 
      Governo_Id = Munic_Id), 
    Governo_Id)) %>% 
  select(Governo_Id) %>% 
  mutate(Governo_Tipo = ifelse(nchar(Governo_Id) == 2, "Estado", "Municipio"))
  
# Salva os dados em csv
fwrite(Governos_Id, "data/dataset/Governos.csv",
       sep = ";", dec = ",")

# Limpa a memória
rm(Ufs, Municipios, Governos_Id)
```

Agora iremos criar a tabela **OSC**, usando a tabela *area_subarea.xlsx* (ele precisa ser baixado da [base de dados do Mapa das (OSC)](https://mapaosc.ipea.gov.br/base-dados)), disponível nas bases de dados do Mapa das OSC. A lista das **OSC** aparece várias vezes no banco e futuramente seria interessante fazer uma checagem para ver se os dados estão consistentes.


```{r eval = FALSE}
# Carrega o pacote 'readxl', para ler dados em MS Excel.
library(readxl)

# Carrega dados do Excel
area_subarea <- read_xlsx("data/raw/area_subarea.xlsx", 
                          sheet = "area_subarea")

# Cria a tabela OSC
OSC <- area_subarea %>% 
  # Seleciona apenas variáveis relevantes.
  select(1, cd_identificador_osc, tx_razao_social_osc, tx_nome_fantasia_osc,
         dt_fundacao_osc, cd_natureza_juridica_osc, edmu_cd_municipio) %>% 
  # Renomeia a variável do código municipal:
  rename(Munic_Id = edmu_cd_municipio)

# Salva os dados em csv
fwrite(OSC, "data/dataset/OSC.csv", sep = ";", dec = ",")

# Limpa a memória
rm(OSC)
```


Seguindo com nosso exemplo, iremos formatar o conjunto de tabelas que especificam as áreas e subáreas do de atuação das OSC. Faremos isso com o arquivo "area_subarea.xlsx" 


```{r eval = FALSE}
# Carrega dados do Excel
area_subarea <- read_xlsx("data/raw/area_subarea.xlsx", 
                          sheet = "area_subarea")

# As áreas de atuação são os nomes das colunas 13 a 23 do banco 'area_subarea'.
AreasAtuacao <- names(area_subarea)[13:23] %>% 
  enframe(name = NULL, value = "Area_Nome") %>% 
  mutate(Area_Id = row_number())

# As subáreas de atuação são os nomes das colunas 24 a 68 do banco 'area_subarea'.
SubAreasAtuacao <- names(area_subarea)[25:68] %>% 
  enframe(name = NULL, value = "SubArea_Nome") %>% 
  mutate(Area_Id = NA,
         SubArea_Id = row_number()) %>% 
  select(SubArea_Id, Area_Id, SubArea_Nome)
  
# Fazendo a relação entre áreas e sub-áreas:
SubAreasAtuacao$Area_Id[25:26 - 24] <- 1 # Habitação
SubAreasAtuacao$Area_Id[27:29 - 24] <- 2 # Saúde
SubAreasAtuacao$Area_Id[30:32 - 24] <- 3 # Cultura e recreação
SubAreasAtuacao$Area_Id[33:41 - 24] <- 4 # Educação e pesquisa
SubAreasAtuacao$Area_Id[42:43 - 24] <- 5 # Assistência social
SubAreasAtuacao$Area_Id[44:45 - 24] <- 6 # Religião
SubAreasAtuacao$Area_Id[46:50 - 24] <- 7 # 	Associações patronais, profissionais e de produtores rurais
SubAreasAtuacao$Area_Id[51:53 - 24] <- 8 # Meio ambiente e proteção animal
SubAreasAtuacao$Area_Id[54:67 - 24] <- 9 # Desenvolvimento e defesa de direitos
SubAreasAtuacao$Area_Id[68 - 24] <- 10 # Outros
```

Agora iremos criar um loop para, para cada área, encontrar as OSC que atuam naquela área.

```{r eval = FALSE}
# O primeiro passo é criar um banco de dados em branco com as variáveis
# utilizadas:
AreasAtuacao_OSC <- tibble(Area_id = integer(0), id_osc = integer(0))

# Agora, para cada área, iremos rodar um loop.
for (i in seq_len(nrow(AreasAtuacao))) {
  
  # Uma mensagem para sabermos o que está acontecendo
  message("Inserindo OSC da área: ", AreasAtuacao$Area_Nome[i])
  
  # Encontramos o nome da área que estamos busando.
  Area_i <- which(names(area_subarea) == AreasAtuacao$Area_Nome[i])
  
  # Seleciona apenas as OSC que atuam naquela áreas.
  OSC_Area <- area_subarea %>% 
    select(1, Area_i) %>% 
    na.omit() %>% 
    magrittr::set_names(c("id_osc", "Area_id")) %>% 
    mutate(Area_id = AreasAtuacao$Area_Id[i])
  
  # Adiciona a relação entre área e OSC no banco:
  AreasAtuacao_OSC <- bind_rows(AreasAtuacao_OSC, OSC_Area)
  
  # Limpa a memória
  rm(Area_i, OSC_Area)
}
rm(i)
```

Agora já podemos salvar as tabelas com a lista das áreas de atuação e a relação entre áreas e OSC:

```{r eval = FALSE}
# Salva os dados em csv
fwrite(AreasAtuacao_OSC, "data/dataset/AreasAtuacao_OSC.csv", 
       sep = ";", dec = ",")

fwrite(AreasAtuacao, "data/dataset/AreasAtuacao.csv", 
       sep = ";", dec = ",")
```

Para salvar as informações a respeito das subáreas, basicamente, repetimo o processo das áreas de atuação

```{r eval = FALSE}
# criamos um banco de dados em branco:
SubAreasAtuacao_OSC <- tibble(id_osc = integer(0), 
                              SubArea_id = integer(0),
                              Area_Id = integer(0))

# Loop para cada subárea>
for (i in seq_len(nrow(SubAreasAtuacao))) {
  
  # Mensagem
  message("Inserindo OSC da Subárea: ", SubAreasAtuacao$SubArea_Nome[i])
  
  # Nome da subárea
  SubArea_Nome <- SubAreasAtuacao$SubArea_Nome[i]
  
  # Seleciona as OSC que atuam naquela subárea.
  OSC_SubArea <- area_subarea  %>% 
    select(1, all_of(SubArea_Nome)) %>% 
    na.omit() %>% 
    magrittr::set_names(c("id_osc", "SubArea_id"))  %>% 
    mutate(SubArea_id = SubAreasAtuacao$SubArea_Id[i], 
           Area_Id = SubAreasAtuacao$Area_Id[i])
  
  # Adiciona os dados ao banco
  SubAreasAtuacao_OSC <- bind_rows(SubAreasAtuacao_OSC, OSC_SubArea)
  
  # Limpa a memória
  rm(SubArea_Nome, OSC_SubArea)
}
rm(i)

# salva as bases de dados em csv.
fwrite(SubAreasAtuacao_OSC, "data/dataset/SubAreasAtuacao_OSC.csv", 
       sep = ";", dec = ",")

fwrite(SubAreasAtuacao, "data/dataset/SubAreasAtuacao.csv", 
       sep = ";", dec = ",")

# Limpa a memória
rm(AreasAtuacao_OSC, AreasAtuacao, SubAreasAtuacao_OSC, SubAreasAtuacao)

# Checa se a memória está limpa
ls()

```

A mesma lógica se repete em todas as bases. Quando todas estiverem formatadas, basta migrar os dados para um DBMS (Data Base Management System), como o PostgreSQL ou o MySQL, conforme especificado na seção "Os passos dessa reformulação...", acima.